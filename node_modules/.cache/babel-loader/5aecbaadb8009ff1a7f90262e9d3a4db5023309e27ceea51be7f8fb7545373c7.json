{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Ball from '../Ball/Ball';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlinkoGame = () => {\n  _s();\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const addBall = () => {\n    if (budget < ballPrice) {\n      alert(\"Not enough budget to drop a ball!\");\n      return;\n    }\n    setBudget(prev => prev - ballPrice);\n    const newBall = {\n      id: balls.length,\n      x: 375,\n      y: 0,\n      onHitMultiplier: multiplier => handleMultiplierHit(multiplier)\n    };\n    setBalls([...balls, newBall]);\n  };\n  const handleMultiplierHit = multiplier => {\n    setBudget(prev => prev + ballPrice * multiplier);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Budget: $\", budget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Price per ball:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: ballPrice,\n        onChange: e => setBallPrice(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBall,\n      children: \"Drop Ball\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pegs\",\n      children: generateCenteredPyramidPegs(10, 375, 70).map((peg, index) => /*#__PURE__*/_jsxDEV(Peg, {\n        x: peg.x,\n        y: peg.y\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multipliers\",\n      children: [8, 0.5, 0.5, 8].map((multiplier, i) => /*#__PURE__*/_jsxDEV(Multiplier, {\n        multiplier: multiplier,\n        x: 150 + i * 150,\n        y: 620 // Adjusted Y position\n        ,\n        onHit: () => handleMultiplierHit(multiplier)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), balls.map(ball => /*#__PURE__*/_jsxDEV(Ball, {\n      ball: ball\n    }, ball.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PlinkoGame, \"AdJBzmK02OE32MDhXVkC+IRhgLw=\");\n_c = PlinkoGame;\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nexport default PlinkoGame;\nvar _c;\n$RefreshReg$(_c, \"PlinkoGame\");","map":{"version":3,"names":["React","useState","Ball","Peg","Multiplier","jsxDEV","_jsxDEV","PlinkoGame","_s","balls","setBalls","budget","setBudget","ballPrice","setBallPrice","addBall","alert","prev","newBall","id","length","x","y","onHitMultiplier","multiplier","handleMultiplierHit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","onClick","generateCenteredPyramidPegs","map","peg","index","i","onHit","ball","_c","rows","centerX","startY","pegs","spacingX","spacingY","row","col","push","$RefreshReg$"],"sources":["/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Ball from '../Ball/Ball';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\n\nconst PlinkoGame = () => {\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n\n  const addBall = () => {\n    if (budget < ballPrice) {\n      alert(\"Not enough budget to drop a ball!\");\n      return;\n    }\n    setBudget((prev) => prev - ballPrice);\n    const newBall = { id: balls.length, x: 375, y: 0, onHitMultiplier: (multiplier) => handleMultiplierHit(multiplier) };\n    setBalls([...balls, newBall]);\n  };\n\n  const handleMultiplierHit = (multiplier) => {\n    setBudget((prev) => prev + ballPrice * multiplier);\n  };\n\n  return (\n    <div className=\"game-board\">\n      <h2>Budget: ${budget}</h2>\n      <label>\n        Price per ball:\n        <input\n          type=\"number\"\n          value={ballPrice}\n          onChange={(e) => setBallPrice(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={addBall}>Drop Ball</button>\n\n      <div className=\"pegs\">\n        {generateCenteredPyramidPegs(10, 375, 70).map((peg, index) => (\n          <Peg key={index} x={peg.x} y={peg.y} />\n        ))}\n      </div>\n\n      <div className=\"multipliers\">\n        {[8, 0.5, 0.5, 8].map((multiplier, i) => (\n          <Multiplier\n            key={i}\n            multiplier={multiplier}\n            x={150 + i * 150}\n            y={620} // Adjusted Y position\n            onHit={() => handleMultiplierHit(multiplier)}\n          />\n        ))}\n      </div>\n\n      {balls.map((ball) => (\n        <Ball key={ball.id} ball={ball} />\n      ))}\n    </div>\n  );\n};\n\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY,\n      });\n    }\n  }\n\n  return pegs;\n};\n\nexport default PlinkoGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}