{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js\",\n  _s = $RefreshSig$();\n// src/components/PlinkoGame/PlinkoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Ball from '../Ball/Ball';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlinkoGame = () => {\n  _s();\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const multiplierRefs = useRef([]);\n  const pegs = generateCenteredPyramidPegs(10, 375, 70);\n  const animationRef = useRef();\n  useEffect(() => {\n    const update = () => {\n      setBalls(prevBalls => prevBalls.map(ball => {\n        // Update velocity with acceleration\n        const newVelocity = {\n          x: ball.velocity.x,\n          y: ball.velocity.y + 0.98 / 4 // Gravity\n        };\n        let newPosition = {\n          x: ball.position.x + newVelocity.x,\n          y: ball.position.y + newVelocity.y\n        };\n\n        // Detect collision with pegs\n        pegs.forEach(peg => {\n          const dx = newPosition.x - peg.x;\n          const dy = newPosition.y - peg.y;\n          const distance = Math.hypot(dx, dy);\n          const minDistance = 15;\n          if (distance < minDistance) {\n            const normalX = dx / distance;\n            const normalY = dy / distance;\n            const speed = newVelocity.x * normalX + newVelocity.y * normalY;\n\n            // Reflect velocity\n            newVelocity.x -= 2 * speed * normalX;\n            newVelocity.y -= 2 * speed * normalY;\n            newVelocity.x *= 0.2; // Damping\n            newVelocity.y *= 0.2;\n\n            // Adjust position\n            newPosition.x += normalX * (minDistance - distance + 0.5);\n            newPosition.y += normalY * (minDistance - distance + 0.5);\n          }\n        });\n\n        // Check for wall collisions\n        if (newPosition.x < 10 || newPosition.x > 740) {\n          newVelocity.x = -newVelocity.x * 0.8;\n          newPosition.x = newPosition.x < 10 ? 10 : 740;\n        }\n        return {\n          ...ball,\n          position: newPosition,\n          velocity: newVelocity\n        };\n      }));\n      animationRef.current = requestAnimationFrame(update);\n    };\n    animationRef.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [pegs]);\n  const addBall = () => {\n    if (budget < ballPrice) {\n      return;\n    }\n    setBudget(prev => prev - ballPrice);\n    const newBall = {\n      id: balls.length,\n      position: {\n        x: 375,\n        y: 0\n      },\n      velocity: {\n        x: (Math.random() - 0.5) * 1,\n        y: 0\n      },\n      hitMultiplier: false\n    };\n    setBalls(prevBalls => [...prevBalls, newBall]);\n  };\n  const handleMultiplierHit = (multiplier, index, ballId) => {\n    setBudget(prev => prev + ballPrice * multiplier);\n    setBalls(prevBalls => prevBalls.filter(ball => ball.id !== ballId));\n    const multiplierElement = multiplierRefs.current[index];\n    if (multiplierElement) {\n      multiplierElement.classList.add('multiplier-hit');\n      setTimeout(() => {\n        multiplierElement.classList.remove('multiplier-hit');\n      }, 500);\n    }\n  };\n  const multipliers = [{\n    multiplier: 8,\n    x: 114,\n    y: 650,\n    id: 0\n  }, {\n    multiplier: 4,\n    x: 164,\n    y: 650,\n    id: 1\n  }, {\n    multiplier: 2,\n    x: 214,\n    y: 650,\n    id: 2\n  }, {\n    multiplier: 1,\n    x: 264,\n    y: 650,\n    id: 3\n  }, {\n    multiplier: 0.5,\n    x: 314,\n    y: 650,\n    id: 4\n  }, {\n    multiplier: 0.3,\n    x: 364,\n    y: 650,\n    id: 5\n  }, {\n    multiplier: 0.5,\n    x: 414,\n    y: 650,\n    id: 6\n  }, {\n    multiplier: 1,\n    x: 464,\n    y: 650,\n    id: 7\n  }, {\n    multiplier: 2,\n    x: 514,\n    y: 650,\n    id: 8\n  }, {\n    multiplier: 4,\n    x: 564,\n    y: 650,\n    id: 9\n  }, {\n    multiplier: 8,\n    x: 614,\n    y: 650,\n    id: 10\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Budget: $\", budget.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price per ball:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ballPrice,\n          onChange: e => setBallPrice(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBall,\n        children: \"Drop Ball\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pegs\",\n        children: pegs.map((peg, index) => /*#__PURE__*/_jsxDEV(Peg, {\n          x: peg.x,\n          y: peg.y\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multipliers\",\n        children: multipliers.map((mult, i) => /*#__PURE__*/_jsxDEV(Multiplier, {\n          ref: el => multiplierRefs.current[i] = el,\n          multiplier: mult.multiplier,\n          x: mult.x,\n          y: 650,\n          id: mult.id,\n          onHit: () => {}\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), balls.map(ball => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ball\",\n        style: {\n          left: ball.position.x,\n          top: ball.position.y\n        }\n      }, ball.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n// Center the pyramid of pegs\n_s(PlinkoGame, \"RV3PcUurntfbz53L9dNkHweryVk=\");\n_c = PlinkoGame;\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nexport default PlinkoGame;\nvar _c;\n$RefreshReg$(_c, \"PlinkoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Ball","Peg","Multiplier","jsxDEV","_jsxDEV","PlinkoGame","_s","balls","setBalls","budget","setBudget","ballPrice","setBallPrice","multiplierRefs","pegs","generateCenteredPyramidPegs","animationRef","update","prevBalls","map","ball","newVelocity","x","velocity","y","newPosition","position","forEach","peg","dx","dy","distance","Math","hypot","minDistance","normalX","normalY","speed","current","requestAnimationFrame","cancelAnimationFrame","addBall","prev","newBall","id","length","random","hitMultiplier","handleMultiplierHit","multiplier","index","ballId","filter","multiplierElement","classList","add","setTimeout","remove","multipliers","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","onClick","mult","i","ref","el","onHit","style","left","top","_c","rows","centerX","startY","spacingX","spacingY","row","col","push","$RefreshReg$"],"sources":["/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js"],"sourcesContent":["// src/components/PlinkoGame/PlinkoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Ball from '../Ball/Ball';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\n\nconst PlinkoGame = () => {\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const multiplierRefs = useRef([]);\n\n  const pegs = generateCenteredPyramidPegs(10, 375, 70);\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const update = () => {\n      setBalls((prevBalls) =>\n        prevBalls.map((ball) => {\n          // Update velocity with acceleration\n          const newVelocity = {\n            x: ball.velocity.x,\n            y: ball.velocity.y + 0.98 / 4, // Gravity\n          };\n\n          let newPosition = {\n            x: ball.position.x + newVelocity.x,\n            y: ball.position.y + newVelocity.y,\n          };\n\n          // Detect collision with pegs\n          pegs.forEach((peg) => {\n            const dx = newPosition.x - peg.x;\n            const dy = newPosition.y - peg.y;\n            const distance = Math.hypot(dx, dy);\n            const minDistance = 15;\n\n            if (distance < minDistance) {\n              const normalX = dx / distance;\n              const normalY = dy / distance;\n              const speed = newVelocity.x * normalX + newVelocity.y * normalY;\n\n              // Reflect velocity\n              newVelocity.x -= 2 * speed * normalX;\n              newVelocity.y -= 2 * speed * normalY;\n\n              newVelocity.x *= 0.2; // Damping\n              newVelocity.y *= 0.2;\n\n              // Adjust position\n              newPosition.x += normalX * (minDistance - distance + 0.5);\n              newPosition.y += normalY * (minDistance - distance + 0.5);\n            }\n          });\n\n          // Check for wall collisions\n          if (newPosition.x < 10 || newPosition.x > 740) {\n            newVelocity.x = -newVelocity.x * 0.8;\n            newPosition.x = newPosition.x < 10 ? 10 : 740;\n          }\n\n          return { ...ball, position: newPosition, velocity: newVelocity };\n        })\n      );\n\n      animationRef.current = requestAnimationFrame(update);\n    };\n\n    animationRef.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [pegs]);\n\n  const addBall = () => {\n    if (budget < ballPrice) {\n      return;\n    }\n    setBudget((prev) => prev - ballPrice);\n    const newBall = {\n      id: balls.length,\n      position: { x: 375, y: 0 },\n      velocity: { x: (Math.random() - 0.5) * 1, y: 0 },\n      hitMultiplier: false,\n    };\n    setBalls((prevBalls) => [...prevBalls, newBall]);\n  };\n\n  const handleMultiplierHit = (multiplier, index, ballId) => {\n    setBudget((prev) => prev + ballPrice * multiplier);\n    setBalls((prevBalls) =>\n      prevBalls.filter((ball) => ball.id !== ballId)\n    );\n    const multiplierElement = multiplierRefs.current[index];\n\n    if (multiplierElement) {\n      multiplierElement.classList.add('multiplier-hit');\n      setTimeout(() => {\n        multiplierElement.classList.remove('multiplier-hit');\n      }, 500);\n    }\n  };\n\n  const multipliers = [\n    { multiplier: 8, x: 114, y: 650, id: 0 },\n    { multiplier: 4, x: 164, y: 650, id: 1 },\n    { multiplier: 2, x: 214, y: 650, id: 2 },\n    { multiplier: 1, x: 264, y: 650, id: 3 },\n    { multiplier: 0.5, x: 314, y: 650, id: 4 },\n    { multiplier: 0.3, x: 364, y: 650, id: 5 },\n    { multiplier: 0.5, x: 414, y: 650, id: 6 },\n    { multiplier: 1, x: 464, y: 650, id: 7 },\n    { multiplier: 2, x: 514, y: 650, id: 8 },\n    { multiplier: 4, x: 564, y: 650, id: 9 },\n    { multiplier: 8, x: 614, y: 650, id: 10 },\n  ];\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-board\">\n        <h2>Budget: ${budget.toFixed(2)}</h2>\n        <label>\n          Price per ball:\n          <input\n            type=\"number\"\n            value={ballPrice}\n            onChange={(e) => setBallPrice(Number(e.target.value))}\n          />\n        </label>\n        <button onClick={addBall}>Drop Ball</button>\n\n        <div className=\"pegs\">\n          {pegs.map((peg, index) => (\n            <Peg key={index} x={peg.x} y={peg.y} />\n          ))}\n        </div>\n\n        <div className=\"multipliers\">\n          {multipliers.map((mult, i) => (\n            <Multiplier\n              key={i}\n              ref={(el) => (multiplierRefs.current[i] = el)}\n              multiplier={mult.multiplier}\n              x={mult.x}\n              y={650}\n              id={mult.id}\n              onHit={() => {}}\n            />\n          ))}\n        </div>\n\n        {balls.map((ball) => (\n          <div\n            key={ball.id}\n            className=\"ball\"\n            style={{ left: ball.position.x, top: ball.position.y }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Center the pyramid of pegs\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY,\n      });\n    }\n  }\n\n  return pegs;\n};\n\nexport default PlinkoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}