{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useBallMovement = (initialX, initialY) => {\n  _s();\n  const [position, setPosition] = useState({\n    x: initialX,\n    y: initialY\n  });\n  const [velocity, setVelocity] = useState({\n    x: 0,\n    y: 5\n  });\n  const pegs = generatePyramidPegs(6, 200, 50);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(prevPos => {\n        let newX = prevPos.x + velocity.x;\n        let newY = prevPos.y + velocity.y;\n        for (let peg of pegs) {\n          const dx = newX - peg.x;\n          const dy = newY - peg.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 15) {\n            // Collision radius\n            setVelocity(prevVel => ({\n              x: -prevVel.x + (Math.random() > 0.5 ? 1 : -1),\n              // Random small shift\n              y: -prevVel.y\n            }));\n            break;\n          }\n        }\n        return {\n          x: newX,\n          y: newY\n        };\n      });\n      setVelocity(prevVel => ({\n        ...prevVel,\n        y: prevVel.y + 0.5\n      })); // Gravity\n    }, 50);\n    return () => clearInterval(interval);\n  }, [velocity]);\n  return position;\n};\n\n// Helper to generate pegs for collision detection\n_s(useBallMovement, \"2xFRMGTURmdfDsntW0G0Zv1x5BM=\");\nconst generatePyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 40;\n  const spacingY = 50;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nexport default useBallMovement;","map":{"version":3,"names":["useEffect","useState","useBallMovement","initialX","initialY","_s","position","setPosition","x","y","velocity","setVelocity","pegs","generatePyramidPegs","interval","setInterval","prevPos","newX","newY","peg","dx","dy","distance","Math","sqrt","prevVel","random","clearInterval","rows","centerX","startY","spacingX","spacingY","row","col","push"],"sources":["/home/tom/Desktop/plinko/src/hooks/useBallMovement.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useBallMovement = (initialX, initialY) => {\n  const [position, setPosition] = useState({ x: initialX, y: initialY });\n  const [velocity, setVelocity] = useState({ x: 0, y: 5 });\n\n  const pegs = generatePyramidPegs(6, 200, 50);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(prevPos => {\n        let newX = prevPos.x + velocity.x;\n        let newY = prevPos.y + velocity.y;\n\n        for (let peg of pegs) {\n          const dx = newX - peg.x;\n          const dy = newY - peg.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 15) { // Collision radius\n            setVelocity(prevVel => ({\n              x: -prevVel.x + (Math.random() > 0.5 ? 1 : -1), // Random small shift\n              y: -prevVel.y,\n            }));\n            break;\n          }\n        }\n\n        return { x: newX, y: newY };\n      });\n\n      setVelocity(prevVel => ({ ...prevVel, y: prevVel.y + 0.5 })); // Gravity\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [velocity]);\n\n  return position;\n};\n\n// Helper to generate pegs for collision detection\nconst generatePyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 40;\n  const spacingY = 50;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY,\n      });\n    }\n  }\n\n  return pegs;\n};\n\nexport default useBallMovement;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAEL,QAAQ;IAAEM,CAAC,EAAEL;EAAS,CAAC,CAAC;EACtE,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAExD,MAAMG,IAAI,GAAGC,mBAAmB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAE5Cb,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCR,WAAW,CAACS,OAAO,IAAI;QACrB,IAAIC,IAAI,GAAGD,OAAO,CAACR,CAAC,GAAGE,QAAQ,CAACF,CAAC;QACjC,IAAIU,IAAI,GAAGF,OAAO,CAACP,CAAC,GAAGC,QAAQ,CAACD,CAAC;QAEjC,KAAK,IAAIU,GAAG,IAAIP,IAAI,EAAE;UACpB,MAAMQ,EAAE,GAAGH,IAAI,GAAGE,GAAG,CAACX,CAAC;UACvB,MAAMa,EAAE,GAAGH,IAAI,GAAGC,GAAG,CAACV,CAAC;UACvB,MAAMa,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;UAC7C,IAAIC,QAAQ,GAAG,EAAE,EAAE;YAAE;YACnBX,WAAW,CAACc,OAAO,KAAK;cACtBjB,CAAC,EAAE,CAACiB,OAAO,CAACjB,CAAC,IAAIe,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;cAAE;cAChDjB,CAAC,EAAE,CAACgB,OAAO,CAAChB;YACd,CAAC,CAAC,CAAC;YACH;UACF;QACF;QAEA,OAAO;UAAED,CAAC,EAAES,IAAI;UAAER,CAAC,EAAES;QAAK,CAAC;MAC7B,CAAC,CAAC;MAEFP,WAAW,CAACc,OAAO,KAAK;QAAE,GAAGA,OAAO;QAAEhB,CAAC,EAAEgB,OAAO,CAAChB,CAAC,GAAG;MAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMkB,aAAa,CAACb,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,OAAOJ,QAAQ;AACjB,CAAC;;AAED;AAAAD,EAAA,CArCMH,eAAe;AAsCrB,MAAMW,mBAAmB,GAAGA,CAACe,IAAI,EAAEC,OAAO,EAAEC,MAAM,KAAK;EACrD,MAAMlB,IAAI,GAAG,EAAE;EACf,MAAMmB,QAAQ,GAAG,EAAE;EACnB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,IAAI,EAAEK,GAAG,EAAE,EAAE;IACnC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAID,GAAG,EAAEC,GAAG,EAAE,EAAE;MACnCtB,IAAI,CAACuB,IAAI,CAAC;QACR3B,CAAC,EAAEqB,OAAO,GAAG,CAACK,GAAG,GAAGD,GAAG,GAAG,CAAC,IAAIF,QAAQ;QACvCtB,CAAC,EAAEqB,MAAM,GAAGG,GAAG,GAAGD;MACpB,CAAC,CAAC;IACJ;EACF;EAEA,OAAOpB,IAAI;AACb,CAAC;AAED,eAAeV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}