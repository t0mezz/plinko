{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js\",\n  _s = $RefreshSig$();\n// src/components/PlinkoGame/PlinkoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlinkoGame = () => {\n  _s();\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const multiplierRefs = useRef([]);\n  const pegs = generateCenteredPyramidPegs(10, 375, 70);\n  const multipliers = [{\n    multiplier: 8,\n    x: 114,\n    y: 650,\n    id: 0\n  }, {\n    multiplier: 4,\n    x: 164,\n    y: 650,\n    id: 1\n  }, {\n    multiplier: 2,\n    x: 214,\n    y: 650,\n    id: 2\n  }, {\n    multiplier: 1,\n    x: 264,\n    y: 650,\n    id: 3\n  }, {\n    multiplier: 0.5,\n    x: 314,\n    y: 650,\n    id: 4\n  }, {\n    multiplier: 0.3,\n    x: 364,\n    y: 650,\n    id: 5\n  }, {\n    multiplier: 0.5,\n    x: 414,\n    y: 650,\n    id: 6\n  }, {\n    multiplier: 1,\n    x: 464,\n    y: 650,\n    id: 7\n  }, {\n    multiplier: 2,\n    x: 514,\n    y: 650,\n    id: 8\n  }, {\n    multiplier: 4,\n    x: 564,\n    y: 650,\n    id: 9\n  }, {\n    multiplier: 8,\n    x: 614,\n    y: 650,\n    id: 10\n  }];\n  const animationRef = useRef();\n  useEffect(() => {\n    const update = () => {\n      setBalls(prevBalls => prevBalls.map(ball => {\n        // Update velocity with acceleration\n        const newVelocity = {\n          x: ball.velocity.x,\n          y: ball.velocity.y + 0.98 / 2 // Gravity\n        };\n        let newPosition = {\n          x: ball.position.x + newVelocity.x,\n          y: ball.position.y + newVelocity.y\n        };\n\n        // Detect collision with pegs\n        pegs.forEach(peg => {\n          const dx = newPosition.x - peg.x;\n          const dy = newPosition.y - peg.y;\n          const distance = Math.hypot(dx, dy);\n          const minDistance = 15;\n          if (distance < minDistance) {\n            const normalX = dx / distance;\n            const normalY = dy / distance;\n            const speed = newVelocity.x * normalX + newVelocity.y * normalY;\n\n            // Reflect velocity\n            newVelocity.x -= 2 * speed * normalX;\n            newVelocity.y -= 2 * speed * normalY;\n            newVelocity.x *= 0.2; // Damping\n            newVelocity.y *= 0.2;\n\n            // Adjust position\n            newPosition.x += normalX * (minDistance - distance + 0.5);\n            newPosition.y += normalY * (minDistance - distance + 0.5);\n          }\n        });\n\n        // Check for wall collisions\n        if (newPosition.x < 10 || newPosition.x > 740) {\n          newVelocity.x = -newVelocity.x * 0.8;\n          newPosition.x = newPosition.x < 10 ? 10 : 740;\n        }\n\n        // Check for multiplier collisions\n        let hitMultiplier = false;\n        multipliers.forEach((mult, index) => {\n          const withinX = newPosition.x > mult.x && newPosition.x < mult.x + 45;\n          const withinY = newPosition.y > mult.y && newPosition.y < mult.y + 45;\n          if (withinX && withinY) {\n            hitMultiplier = true;\n            setBudget(prev => prev + ballPrice * mult.multiplier);\n            const multiplierElement = multiplierRefs.current[index];\n            if (multiplierElement) {\n              multiplierElement.classList.add('multiplier-hit');\n              setTimeout(() => {\n                multiplierElement.classList.remove('multiplier-hit');\n              }, 500);\n            }\n          }\n        });\n        if (hitMultiplier || newPosition.y > 900) {\n          // Remove the ball\n          return null;\n        } else {\n          return {\n            ...ball,\n            position: newPosition,\n            velocity: newVelocity\n          };\n        }\n      }).filter(Boolean) // Remove balls that have hit a multiplier or gone off-screen\n      );\n      animationRef.current = requestAnimationFrame(update);\n    };\n    animationRef.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [pegs, multipliers, ballPrice]);\n  const addBall = () => {\n    if (budget < ballPrice) {\n      return;\n    }\n    setBudget(prev => prev - ballPrice);\n    const newBall = {\n      id: Date.now(),\n      position: {\n        x: 375,\n        y: 0\n      },\n      velocity: {\n        x: (Math.random() - 0.5) * 1,\n        y: 0\n      }\n    };\n    setBalls(prevBalls => [...prevBalls, newBall]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Budget: $\", budget.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price per ball:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ballPrice,\n          onChange: e => setBallPrice(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBall,\n        children: \"Drop Ball\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pegs\",\n        children: pegs.map((peg, index) => /*#__PURE__*/_jsxDEV(Peg, {\n          x: peg.x,\n          y: peg.y\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multipliers\",\n        children: multipliers.map((mult, i) => /*#__PURE__*/_jsxDEV(Multiplier, {\n          ref: el => multiplierRefs.current[i] = el,\n          multiplier: mult.multiplier,\n          x: mult.x,\n          y: 650,\n          id: mult.id,\n          onHit: () => {}\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), balls.map(ball => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ball\",\n        style: {\n          left: ball.position.x,\n          top: ball.position.y\n        }\n      }, ball.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n// Center the pyramid of pegs\n_s(PlinkoGame, \"RV3PcUurntfbz53L9dNkHweryVk=\");\n_c = PlinkoGame;\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nexport default PlinkoGame;\nvar _c;\n$RefreshReg$(_c, \"PlinkoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Peg","Multiplier","jsxDEV","_jsxDEV","PlinkoGame","_s","balls","setBalls","budget","setBudget","ballPrice","setBallPrice","multiplierRefs","pegs","generateCenteredPyramidPegs","multipliers","multiplier","x","y","id","animationRef","update","prevBalls","map","ball","newVelocity","velocity","newPosition","position","forEach","peg","dx","dy","distance","Math","hypot","minDistance","normalX","normalY","speed","hitMultiplier","mult","index","withinX","withinY","prev","multiplierElement","current","classList","add","setTimeout","remove","filter","Boolean","requestAnimationFrame","cancelAnimationFrame","addBall","newBall","Date","now","random","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","onClick","i","ref","el","onHit","style","left","top","_c","rows","centerX","startY","spacingX","spacingY","row","col","push","$RefreshReg$"],"sources":["/home/tom/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js"],"sourcesContent":["// src/components/PlinkoGame/PlinkoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\n\nconst PlinkoGame = () => {\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const multiplierRefs = useRef([]);\n\n  const pegs = generateCenteredPyramidPegs(10, 375, 70);\n  const multipliers = [\n    { multiplier: 8, x: 114, y: 650, id: 0 },\n    { multiplier: 4, x: 164, y: 650, id: 1 },\n    { multiplier: 2, x: 214, y: 650, id: 2 },\n    { multiplier: 1, x: 264, y: 650, id: 3 },\n    { multiplier: 0.5, x: 314, y: 650, id: 4 },\n    { multiplier: 0.3, x: 364, y: 650, id: 5 },\n    { multiplier: 0.5, x: 414, y: 650, id: 6 },\n    { multiplier: 1, x: 464, y: 650, id: 7 },\n    { multiplier: 2, x: 514, y: 650, id: 8 },\n    { multiplier: 4, x: 564, y: 650, id: 9 },\n    { multiplier: 8, x: 614, y: 650, id: 10 },\n  ];\n\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const update = () => {\n      setBalls((prevBalls) =>\n        prevBalls\n          .map((ball) => {\n            // Update velocity with acceleration\n            const newVelocity = {\n              x: ball.velocity.x,\n              y: ball.velocity.y + 0.98 / 2, // Gravity\n            };\n\n            let newPosition = {\n              x: ball.position.x + newVelocity.x,\n              y: ball.position.y + newVelocity.y,\n            };\n\n            // Detect collision with pegs\n            pegs.forEach((peg) => {\n              const dx = newPosition.x - peg.x;\n              const dy = newPosition.y - peg.y;\n              const distance = Math.hypot(dx, dy);\n              const minDistance = 15;\n\n              if (distance < minDistance) {\n                const normalX = dx / distance;\n                const normalY = dy / distance;\n                const speed = newVelocity.x * normalX + newVelocity.y * normalY;\n\n                // Reflect velocity\n                newVelocity.x -= 2 * speed * normalX;\n                newVelocity.y -= 2 * speed * normalY;\n\n                newVelocity.x *= 0.2; // Damping\n                newVelocity.y *= 0.2;\n\n                // Adjust position\n                newPosition.x += normalX * (minDistance - distance + 0.5);\n                newPosition.y += normalY * (minDistance - distance + 0.5);\n              }\n            });\n\n            // Check for wall collisions\n            if (newPosition.x < 10 || newPosition.x > 740) {\n              newVelocity.x = -newVelocity.x * 0.8;\n              newPosition.x = newPosition.x < 10 ? 10 : 740;\n            }\n\n            // Check for multiplier collisions\n            let hitMultiplier = false;\n            multipliers.forEach((mult, index) => {\n              const withinX =\n                newPosition.x > mult.x && newPosition.x < mult.x + 45;\n              const withinY =\n                newPosition.y > mult.y && newPosition.y < mult.y + 45;\n\n              if (withinX && withinY) {\n                hitMultiplier = true;\n                setBudget((prev) => prev + ballPrice * mult.multiplier);\n\n                const multiplierElement = multiplierRefs.current[index];\n                if (multiplierElement) {\n                  multiplierElement.classList.add('multiplier-hit');\n                  setTimeout(() => {\n                    multiplierElement.classList.remove('multiplier-hit');\n                  }, 500);\n                }\n              }\n            });\n\n            if (hitMultiplier || newPosition.y > 900) {\n              // Remove the ball\n              return null;\n            } else {\n              return {\n                ...ball,\n                position: newPosition,\n                velocity: newVelocity,\n              };\n            }\n          })\n          .filter(Boolean) // Remove balls that have hit a multiplier or gone off-screen\n      );\n\n      animationRef.current = requestAnimationFrame(update);\n    };\n\n    animationRef.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [pegs, multipliers, ballPrice]);\n\n  const addBall = () => {\n    if (budget < ballPrice) {\n      return;\n    }\n    setBudget((prev) => prev - ballPrice);\n    const newBall = {\n      id: Date.now(),\n      position: { x: 375, y: 0 },\n      velocity: { x: (Math.random() - 0.5) * 1, y: 0 },\n    };\n    setBalls((prevBalls) => [...prevBalls, newBall]);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-board\">\n        <h2>Budget: ${budget.toFixed(2)}</h2>\n        <label>\n          Price per ball:\n          <input\n            type=\"number\"\n            value={ballPrice}\n            onChange={(e) => setBallPrice(Number(e.target.value))}\n          />\n        </label>\n        <button onClick={addBall}>Drop Ball</button>\n\n        <div className=\"pegs\">\n          {pegs.map((peg, index) => (\n            <Peg key={index} x={peg.x} y={peg.y} />\n          ))}\n        </div>\n\n        <div className=\"multipliers\">\n          {multipliers.map((mult, i) => (\n            <Multiplier\n              key={i}\n              ref={(el) => (multiplierRefs.current[i] = el)}\n              multiplier={mult.multiplier}\n              x={mult.x}\n              y={650}\n              id={mult.id}\n              onHit={() => {}}\n            />\n          ))}\n        </div>\n\n        {balls.map((ball) => (\n          <div\n            key={ball.id}\n            className=\"ball\"\n            style={{ left: ball.position.x, top: ball.position.y }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Center the pyramid of pegs\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY,\n      });\n    }\n  }\n\n  return pegs;\n};\n\nexport default PlinkoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}