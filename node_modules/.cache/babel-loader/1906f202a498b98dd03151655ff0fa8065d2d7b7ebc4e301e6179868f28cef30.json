{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acc4t\\\\Desktop\\\\plinko\\\\src\\\\components\\\\PlinkoGame\\\\PlinkoGame.js\",\n  _s = $RefreshSig$();\n// src/components/PlinkoGame/PlinkoGame.js\n\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport Peg from '../Peg/Peg';\nimport Multiplier from '../Multiplier/Multiplier';\nimport './PlinkoGame.css';\nimport '../Ball/Ball.css';\n\n// Load sounds for each multiplier\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst multiplierSounds = {\n  0.3: new Audio('/sounds/multiplier-0.3x.mp3'),\n  0.5: new Audio('/sounds/multiplier-0.5x.mp3'),\n  1: new Audio('/sounds/multiplier-1x.mp3'),\n  2: new Audio('/sounds/multiplier-2x.mp3'),\n  4: new Audio('/sounds/multiplier-4x.mp3'),\n  8: new Audio('/sounds/multiplier-8x.mp3')\n};\n\n// Handle sound loading errors\nObject.keys(multiplierSounds).forEach(key => {\n  multiplierSounds[key].addEventListener('error', () => {\n    console.warn(`Sound file for multiplier ${key}x failed to load.`);\n    multiplierSounds[key] = null;\n  });\n});\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 60;\n  const spacingY = 60;\n  for (let row = 2; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nconst PlinkoGame = () => {\n  _s();\n  const [balls, setBalls] = useState([]);\n  const [budget, setBudget] = useState(1000);\n  const [ballPrice, setBallPrice] = useState(10);\n  const multiplierRefs = useRef([]);\n  const animationRef = useRef();\n  const previousTimeRef = useRef();\n\n  // Generate pegs and multipliers\n  const pegs = useMemo(() => generateCenteredPyramidPegs(10, 375, 70), []);\n  const multipliers = useMemo(() => [{\n    multiplier: 8,\n    x: 114,\n    y: 650,\n    id: 0\n  }, {\n    multiplier: 4,\n    x: 164,\n    y: 650,\n    id: 1\n  }, {\n    multiplier: 2,\n    x: 214,\n    y: 650,\n    id: 2\n  }, {\n    multiplier: 1,\n    x: 264,\n    y: 650,\n    id: 3\n  }, {\n    multiplier: 0.5,\n    x: 314,\n    y: 650,\n    id: 4\n  }, {\n    multiplier: 0.3,\n    x: 364,\n    y: 650,\n    id: 5\n  }, {\n    multiplier: 0.5,\n    x: 414,\n    y: 650,\n    id: 6\n  }, {\n    multiplier: 1,\n    x: 464,\n    y: 650,\n    id: 7\n  }, {\n    multiplier: 2,\n    x: 514,\n    y: 650,\n    id: 8\n  }, {\n    multiplier: 4,\n    x: 564,\n    y: 650,\n    id: 9\n  }, {\n    multiplier: 8,\n    x: 614,\n    y: 650,\n    id: 10\n  }], []);\n\n  // Refs to keep track of changing values\n  const ballPriceRef = useRef(ballPrice);\n  const budgetRef = useRef(budget);\n  useEffect(() => {\n    ballPriceRef.current = ballPrice;\n  }, [ballPrice]);\n  useEffect(() => {\n    budgetRef.current = budget;\n  }, [budget]);\n  const addBall = () => {\n    if (budgetRef.current < ballPriceRef.current) {\n      return;\n    }\n    setBudget(prev => prev - ballPriceRef.current);\n    const newBall = {\n      id: Date.now(),\n      position: {\n        x: 375,\n        y: 60\n      },\n      velocity: {\n        x: (Math.random() - 0.5) * 1.2,\n        y: 0\n      }\n    };\n    setBalls(prevBalls => [...prevBalls, newBall]);\n  };\n  useEffect(() => {\n    const handleKeyUp = event => {\n      if (event.code === 'Space') {\n        addBall();\n      }\n    };\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n  useEffect(() => {\n    const update = currentTime => {\n      if (previousTimeRef.current == undefined) {\n        previousTimeRef.current = currentTime;\n      }\n      const deltaTime = (currentTime - previousTimeRef.current) / 1000; // in seconds\n      previousTimeRef.current = currentTime;\n      setBalls(prevBalls => prevBalls.map(ball => {\n        // Update velocity with gravity\n        const newVelocity = {\n          x: ball.velocity.x,\n          y: ball.velocity.y + 300 * deltaTime // Gravity adjusted for delta time\n        };\n        let newPosition = {\n          x: ball.position.x + newVelocity.x * deltaTime,\n          y: ball.position.y + newVelocity.y * deltaTime\n        };\n        let hitMultiplier = false;\n\n        // Detect collision with pegs\n        pegs.forEach(peg => {\n          const dx = newPosition.x - peg.x;\n          const dy = newPosition.y - peg.y;\n          const distance = Math.hypot(dx, dy);\n          const minDistance = 15;\n          if (distance < minDistance) {\n            const normalX = dx / distance;\n            const normalY = dy / distance;\n            const speed = newVelocity.x * normalX + newVelocity.y * normalY;\n\n            // Reflect velocity\n            newVelocity.x -= 2 * speed * normalX;\n            newVelocity.y -= 2 * speed * normalY;\n\n            // Apply reduced damping for gentler bounce\n            newVelocity.x *= 0.6;\n            newVelocity.y *= 0.6;\n\n            // Adjust position\n            newPosition.x += normalX * (minDistance - distance + 0.5);\n            newPosition.y += normalY * (minDistance - distance + 0.5);\n          }\n        });\n\n        // Check for wall collisions (moved walls towards center by reducing x limits)\n        if (newPosition.x < 50 || newPosition.x > 700) {\n          newVelocity.x = -newVelocity.x * 0.3; // Increased damping\n          newPosition.x = newPosition.x < 50 ? 50 : 700;\n        }\n\n        // Check for multiplier collisions\n        multipliers.forEach((mult, index) => {\n          const withinX = newPosition.x > mult.x && newPosition.x < mult.x + 45;\n          const withinY = newPosition.y > mult.y && newPosition.y < mult.y + 45;\n          if (withinX && withinY && !hitMultiplier) {\n            // Play the corresponding sound if available\n            if (multiplierSounds[mult.multiplier]) {\n              try {\n                multiplierSounds[mult.multiplier].currentTime = 0;\n                multiplierSounds[mult.multiplier].play();\n              } catch (error) {\n                console.warn(`Failed to play sound for multiplier ${mult.multiplier}x.`);\n              }\n            }\n\n            // Update budget\n            setBudget(prev => prev + ballPriceRef.current * mult.multiplier);\n\n            // Add animation class\n            const multiplierElement = multiplierRefs.current[index];\n            if (multiplierElement) {\n              multiplierElement.classList.add('multiplier-hit');\n              setTimeout(() => {\n                multiplierElement.classList.remove('multiplier-hit');\n              }, 500);\n            }\n            hitMultiplier = true;\n          }\n        });\n        if (hitMultiplier || newPosition.y > 900) {\n          // Remove the ball\n          return null;\n        } else {\n          return {\n            ...ball,\n            position: newPosition,\n            velocity: newVelocity\n          };\n        }\n      }).filter(Boolean) // Remove balls that have hit a multiplier or gone off-screen\n      );\n      animationRef.current = requestAnimationFrame(update);\n    };\n    animationRef.current = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [pegs, multipliers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Budget: $\", budget.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price per ball:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ballPrice,\n          onChange: e => setBallPrice(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBall,\n        children: \"Drop Ball\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pegs\",\n        children: pegs.map((peg, index) => /*#__PURE__*/_jsxDEV(Peg, {\n          x: peg.x,\n          y: peg.y\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multipliers\",\n        children: multipliers.map((mult, i) => /*#__PURE__*/_jsxDEV(Multiplier, {\n          ref: el => multiplierRefs.current[i] = el,\n          multiplier: mult.multiplier,\n          x: mult.x,\n          y: mult.y,\n          id: mult.id,\n          onHit: () => {}\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), balls.map(ball => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ball\",\n        style: {\n          left: `${ball.position.x}px`,\n          top: `${ball.position.y}px`\n        }\n      }, ball.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(PlinkoGame, \"pWgou/jn1iFFrzURAJQOHy9HLJU=\");\n_c = PlinkoGame;\nexport default PlinkoGame;\nvar _c;\n$RefreshReg$(_c, \"PlinkoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Peg","Multiplier","jsxDEV","_jsxDEV","multiplierSounds","Audio","Object","keys","forEach","key","addEventListener","console","warn","generateCenteredPyramidPegs","rows","centerX","startY","pegs","spacingX","spacingY","row","col","push","x","y","PlinkoGame","_s","balls","setBalls","budget","setBudget","ballPrice","setBallPrice","multiplierRefs","animationRef","previousTimeRef","multipliers","multiplier","id","ballPriceRef","budgetRef","current","addBall","prev","newBall","Date","now","position","velocity","Math","random","prevBalls","handleKeyUp","event","code","window","removeEventListener","update","currentTime","undefined","deltaTime","map","ball","newVelocity","newPosition","hitMultiplier","peg","dx","dy","distance","hypot","minDistance","normalX","normalY","speed","mult","index","withinX","withinY","play","error","multiplierElement","classList","add","setTimeout","remove","filter","Boolean","requestAnimationFrame","cancelAnimationFrame","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","onClick","i","ref","el","onHit","style","left","top","_c","$RefreshReg$"],"sources":["C:/Users/acc4t/Desktop/plinko/src/components/PlinkoGame/PlinkoGame.js"],"sourcesContent":["// src/components/PlinkoGame/PlinkoGame.js\r\n\r\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport Peg from '../Peg/Peg';\r\nimport Multiplier from '../Multiplier/Multiplier';\r\nimport './PlinkoGame.css';\r\nimport '../Ball/Ball.css';\r\n\r\n// Load sounds for each multiplier\r\nconst multiplierSounds = {\r\n  0.3: new Audio('/sounds/multiplier-0.3x.mp3'),\r\n  0.5: new Audio('/sounds/multiplier-0.5x.mp3'),\r\n  1: new Audio('/sounds/multiplier-1x.mp3'),\r\n  2: new Audio('/sounds/multiplier-2x.mp3'),\r\n  4: new Audio('/sounds/multiplier-4x.mp3'),\r\n  8: new Audio('/sounds/multiplier-8x.mp3'),\r\n};\r\n\r\n// Handle sound loading errors\r\nObject.keys(multiplierSounds).forEach((key) => {\r\n  multiplierSounds[key].addEventListener('error', () => {\r\n    console.warn(`Sound file for multiplier ${key}x failed to load.`);\r\n    multiplierSounds[key] = null;\r\n  });\r\n});\r\n\r\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\r\n  const pegs = [];\r\n  const spacingX = 60;\r\n  const spacingY = 60;\r\n\r\n  for (let row = 2; row < rows; row++) {\r\n    for (let col = 0; col <= row; col++) {\r\n      pegs.push({\r\n        x: centerX + (col - row / 2) * spacingX,\r\n        y: startY + row * spacingY,\r\n      });\r\n    }\r\n  }\r\n\r\n  return pegs;\r\n};\r\n\r\nconst PlinkoGame = () => {\r\n  const [balls, setBalls] = useState([]);\r\n  const [budget, setBudget] = useState(1000);\r\n  const [ballPrice, setBallPrice] = useState(10);\r\n  const multiplierRefs = useRef([]);\r\n  const animationRef = useRef();\r\n  const previousTimeRef = useRef();\r\n\r\n  // Generate pegs and multipliers\r\n  const pegs = useMemo(() => generateCenteredPyramidPegs(10, 375, 70), []);\r\n  const multipliers = useMemo(\r\n    () => [\r\n      { multiplier: 8, x: 114, y: 650, id: 0 },\r\n      { multiplier: 4, x: 164, y: 650, id: 1 },\r\n      { multiplier: 2, x: 214, y: 650, id: 2 },\r\n      { multiplier: 1, x: 264, y: 650, id: 3 },\r\n      { multiplier: 0.5, x: 314, y: 650, id: 4 },\r\n      { multiplier: 0.3, x: 364, y: 650, id: 5 },\r\n      { multiplier: 0.5, x: 414, y: 650, id: 6 },\r\n      { multiplier: 1, x: 464, y: 650, id: 7 },\r\n      { multiplier: 2, x: 514, y: 650, id: 8 },\r\n      { multiplier: 4, x: 564, y: 650, id: 9 },\r\n      { multiplier: 8, x: 614, y: 650, id: 10 },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Refs to keep track of changing values\r\n  const ballPriceRef = useRef(ballPrice);\r\n  const budgetRef = useRef(budget);\r\n\r\n  useEffect(() => {\r\n    ballPriceRef.current = ballPrice;\r\n  }, [ballPrice]);\r\n\r\n  useEffect(() => {\r\n    budgetRef.current = budget;\r\n  }, [budget]);\r\n\r\n  const addBall = () => {\r\n    if (budgetRef.current < ballPriceRef.current) {\r\n      return;\r\n    }\r\n    setBudget((prev) => prev - ballPriceRef.current);\r\n    const newBall = {\r\n      id: Date.now(),\r\n      position: { x: 375, y: 60 },\r\n      velocity: { x: (Math.random() - 0.5) * 1.2, y: 0 },\r\n    };\r\n    setBalls((prevBalls) => [...prevBalls, newBall]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyUp = (event) => {\r\n      if (event.code === 'Space') {\r\n        addBall();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keyup', handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const update = (currentTime) => {\r\n      if (previousTimeRef.current == undefined) {\r\n        previousTimeRef.current = currentTime;\r\n      }\r\n      const deltaTime = (currentTime - previousTimeRef.current) / 1000; // in seconds\r\n      previousTimeRef.current = currentTime;\r\n\r\n      setBalls((prevBalls) =>\r\n        prevBalls\r\n          .map((ball) => {\r\n            // Update velocity with gravity\r\n            const newVelocity = {\r\n              x: ball.velocity.x,\r\n              y: ball.velocity.y + 300 * deltaTime, // Gravity adjusted for delta time\r\n            };\r\n\r\n            let newPosition = {\r\n              x: ball.position.x + newVelocity.x * deltaTime,\r\n              y: ball.position.y + newVelocity.y * deltaTime,\r\n            };\r\n\r\n            let hitMultiplier = false;\r\n\r\n            // Detect collision with pegs\r\n            pegs.forEach((peg) => {\r\n              const dx = newPosition.x - peg.x;\r\n              const dy = newPosition.y - peg.y;\r\n              const distance = Math.hypot(dx, dy);\r\n              const minDistance = 15;\r\n\r\n              if (distance < minDistance) {\r\n                const normalX = dx / distance;\r\n                const normalY = dy / distance;\r\n                const speed =\r\n                  newVelocity.x * normalX + newVelocity.y * normalY;\r\n\r\n                // Reflect velocity\r\n                newVelocity.x -= 2 * speed * normalX;\r\n                newVelocity.y -= 2 * speed * normalY;\r\n\r\n                // Apply reduced damping for gentler bounce\r\n                newVelocity.x *= 0.6;\r\n                newVelocity.y *= 0.6;\r\n\r\n                // Adjust position\r\n                newPosition.x += normalX * (minDistance - distance + 0.5);\r\n                newPosition.y += normalY * (minDistance - distance + 0.5);\r\n              }\r\n            });\r\n\r\n            // Check for wall collisions (moved walls towards center by reducing x limits)\r\n            if (newPosition.x < 50 || newPosition.x > 700) {\r\n              newVelocity.x = -newVelocity.x * 0.3; // Increased damping\r\n              newPosition.x = newPosition.x < 50 ? 50 : 700;\r\n            }\r\n\r\n            // Check for multiplier collisions\r\n            multipliers.forEach((mult, index) => {\r\n              const withinX =\r\n                newPosition.x > mult.x && newPosition.x < mult.x + 45;\r\n              const withinY =\r\n                newPosition.y > mult.y && newPosition.y < mult.y + 45;\r\n\r\n              if (withinX && withinY && !hitMultiplier) {\r\n                // Play the corresponding sound if available\r\n                if (multiplierSounds[mult.multiplier]) {\r\n                  try {\r\n                    multiplierSounds[mult.multiplier].currentTime = 0;\r\n                    multiplierSounds[mult.multiplier].play();\r\n                  } catch (error) {\r\n                    console.warn(\r\n                      `Failed to play sound for multiplier ${mult.multiplier}x.`\r\n                    );\r\n                  }\r\n                }\r\n\r\n                // Update budget\r\n                setBudget(\r\n                  (prev) =>\r\n                    prev + ballPriceRef.current * mult.multiplier\r\n                );\r\n\r\n                // Add animation class\r\n                const multiplierElement = multiplierRefs.current[index];\r\n                if (multiplierElement) {\r\n                  multiplierElement.classList.add('multiplier-hit');\r\n                  setTimeout(() => {\r\n                    multiplierElement.classList.remove('multiplier-hit');\r\n                  }, 500);\r\n                }\r\n\r\n                hitMultiplier = true;\r\n              }\r\n            });\r\n\r\n            if (hitMultiplier || newPosition.y > 900) {\r\n              // Remove the ball\r\n              return null;\r\n            } else {\r\n              return {\r\n                ...ball,\r\n                position: newPosition,\r\n                velocity: newVelocity,\r\n              };\r\n            }\r\n          })\r\n          .filter(Boolean) // Remove balls that have hit a multiplier or gone off-screen\r\n      );\r\n\r\n      animationRef.current = requestAnimationFrame(update);\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(update);\r\n    return () => cancelAnimationFrame(animationRef.current);\r\n  }, [pegs, multipliers]);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"user-interface\">\r\n        <h2>Budget: ${budget.toFixed(2)}</h2>\r\n        <label>\r\n          Price per ball:\r\n          <input\r\n            type=\"number\"\r\n            value={ballPrice}\r\n            onChange={(e) => setBallPrice(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <button onClick={addBall}>Drop Ball</button>\r\n      </div>\r\n      <div className=\"game-board\">\r\n        <div className=\"pegs\">\r\n          {pegs.map((peg, index) => (\r\n            <Peg key={index} x={peg.x} y={peg.y} />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"multipliers\">\r\n          {multipliers.map((mult, i) => (\r\n            <Multiplier\r\n              key={i}\r\n              ref={(el) => (multiplierRefs.current[i] = el)}\r\n              multiplier={mult.multiplier}\r\n              x={mult.x}\r\n              y={mult.y}\r\n              id={mult.id}\r\n              onHit={() => {}}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {balls.map((ball) => (\r\n          <div\r\n            key={ball.id}\r\n            className=\"ball\"\r\n            style={{\r\n              left: `${ball.position.x}px`,\r\n              top: `${ball.position.y}px`,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlinkoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}