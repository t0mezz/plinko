{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useBallMovement = (initialX, initialY) => {\n  _s();\n  const [position, setPosition] = useState({\n    x: initialX,\n    y: initialY\n  });\n  const [velocity, setVelocity] = useState({\n    x: 0,\n    y: 8\n  });\n  const pegs = generateCenteredPyramidPegs(10, 375, 70); // Updated wider pyramid\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(prevPos => {\n        let newX = prevPos.x + velocity.x;\n        let newY = prevPos.y + velocity.y;\n\n        // Detect collision with pegs\n        for (let peg of pegs) {\n          const dx = newX - peg.x;\n          const dy = newY - peg.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 15) {\n            setVelocity(prevVel => ({\n              x: prevVel.x * 1 + (Math.random() - 0.5) * 3,\n              // Adds random deflection\n              y: prevVel.y * -0.6 + 5 // Controlled upward bounce\n            }));\n            break;\n          }\n        }\n\n        // Check for side collisions\n        if (newX < 10 || newX > 740) {\n          setVelocity(prevVel => ({\n            x: -prevVel.x,\n            y: prevVel.y\n          }));\n        }\n        return {\n          x: newX,\n          y: newY\n        };\n      });\n\n      // Apply gravity with a consistent downward pull\n      setVelocity(prevVel => ({\n        x: prevVel.x,\n        y: prevVel.y + 0.6\n      }));\n    }, 20);\n    return () => clearInterval(interval);\n  }, [velocity, pegs]); // Added 'pegs' to the dependency array\n\n  return position;\n};\n_s(useBallMovement, \"TUUbqCompzAKO4QQwFTkus/jtWk=\");\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY\n      });\n    }\n  }\n  return pegs;\n};\nexport default useBallMovement;","map":{"version":3,"names":["useEffect","useState","useBallMovement","initialX","initialY","_s","position","setPosition","x","y","velocity","setVelocity","pegs","generateCenteredPyramidPegs","interval","setInterval","prevPos","newX","newY","peg","dx","dy","distance","Math","sqrt","prevVel","random","clearInterval","rows","centerX","startY","spacingX","spacingY","row","col","push"],"sources":["/home/tom/Desktop/plinko/src/hooks/useBallMovement.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useBallMovement = (initialX, initialY) => {\n  const [position, setPosition] = useState({ x: initialX, y: initialY });\n  const [velocity, setVelocity] = useState({ x: 0, y: 8 });\n  const pegs = generateCenteredPyramidPegs(10, 375, 70); // Updated wider pyramid\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition((prevPos) => {\n        let newX = prevPos.x + velocity.x;\n        let newY = prevPos.y + velocity.y;\n\n        // Detect collision with pegs\n        for (let peg of pegs) {\n          const dx = newX - peg.x;\n          const dy = newY - peg.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 15) {\n            setVelocity((prevVel) => ({\n              x: prevVel.x * 1 + (Math.random() - 0.5) * 3, // Adds random deflection\n              y: prevVel.y * -0.6 + 5, // Controlled upward bounce\n            }));\n            break;\n          }\n        }\n\n        // Check for side collisions\n        if (newX < 10 || newX > 740) {\n          setVelocity((prevVel) => ({ x: -prevVel.x, y: prevVel.y }));\n        }\n\n        return { x: newX, y: newY };\n      });\n\n      // Apply gravity with a consistent downward pull\n      setVelocity((prevVel) => ({ x: prevVel.x, y: prevVel.y + 0.6 }));\n    }, 20);\n\n    return () => clearInterval(interval);\n  }, [velocity, pegs]); // Added 'pegs' to the dependency array\n\n  return position;\n};\n\nconst generateCenteredPyramidPegs = (rows, centerX, startY) => {\n  const pegs = [];\n  const spacingX = 45;\n  const spacingY = 60;\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col <= row; col++) {\n      pegs.push({\n        x: centerX + (col - row / 2) * spacingX,\n        y: startY + row * spacingY,\n      });\n    }\n  }\n\n  return pegs;\n};\n\nexport default useBallMovement;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAEL,QAAQ;IAAEM,CAAC,EAAEL;EAAS,CAAC,CAAC;EACtE,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEO,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAMG,IAAI,GAAGC,2BAA2B,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEvDb,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCR,WAAW,CAAES,OAAO,IAAK;QACvB,IAAIC,IAAI,GAAGD,OAAO,CAACR,CAAC,GAAGE,QAAQ,CAACF,CAAC;QACjC,IAAIU,IAAI,GAAGF,OAAO,CAACP,CAAC,GAAGC,QAAQ,CAACD,CAAC;;QAEjC;QACA,KAAK,IAAIU,GAAG,IAAIP,IAAI,EAAE;UACpB,MAAMQ,EAAE,GAAGH,IAAI,GAAGE,GAAG,CAACX,CAAC;UACvB,MAAMa,EAAE,GAAGH,IAAI,GAAGC,GAAG,CAACV,CAAC;UACvB,MAAMa,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;UAC7C,IAAIC,QAAQ,GAAG,EAAE,EAAE;YACjBX,WAAW,CAAEc,OAAO,KAAM;cACxBjB,CAAC,EAAEiB,OAAO,CAACjB,CAAC,GAAG,CAAC,GAAG,CAACe,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;cAAE;cAC9CjB,CAAC,EAAEgB,OAAO,CAAChB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAE;YAC3B,CAAC,CAAC,CAAC;YACH;UACF;QACF;;QAEA;QACA,IAAIQ,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,GAAG,EAAE;UAC3BN,WAAW,CAAEc,OAAO,KAAM;YAAEjB,CAAC,EAAE,CAACiB,OAAO,CAACjB,CAAC;YAAEC,CAAC,EAAEgB,OAAO,CAAChB;UAAE,CAAC,CAAC,CAAC;QAC7D;QAEA,OAAO;UAAED,CAAC,EAAES,IAAI;UAAER,CAAC,EAAES;QAAK,CAAC;MAC7B,CAAC,CAAC;;MAEF;MACAP,WAAW,CAAEc,OAAO,KAAM;QAAEjB,CAAC,EAAEiB,OAAO,CAACjB,CAAC;QAAEC,CAAC,EAAEgB,OAAO,CAAChB,CAAC,GAAG;MAAI,CAAC,CAAC,CAAC;IAClE,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMkB,aAAa,CAACb,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,QAAQ,EAAEE,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEtB,OAAON,QAAQ;AACjB,CAAC;AAACD,EAAA,CAzCIH,eAAe;AA2CrB,MAAMW,2BAA2B,GAAGA,CAACe,IAAI,EAAEC,OAAO,EAAEC,MAAM,KAAK;EAC7D,MAAMlB,IAAI,GAAG,EAAE;EACf,MAAMmB,QAAQ,GAAG,EAAE;EACnB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,IAAI,EAAEK,GAAG,EAAE,EAAE;IACnC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAID,GAAG,EAAEC,GAAG,EAAE,EAAE;MACnCtB,IAAI,CAACuB,IAAI,CAAC;QACR3B,CAAC,EAAEqB,OAAO,GAAG,CAACK,GAAG,GAAGD,GAAG,GAAG,CAAC,IAAIF,QAAQ;QACvCtB,CAAC,EAAEqB,MAAM,GAAGG,GAAG,GAAGD;MACpB,CAAC,CAAC;IACJ;EACF;EAEA,OAAOpB,IAAI;AACb,CAAC;AAED,eAAeV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}